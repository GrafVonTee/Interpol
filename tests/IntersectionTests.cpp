#include "gtest/gtest.h"
#include "GeometryUtils.h"
#include "CalculateIntersections.h"

using namespace Geometry;
using namespace Math;
using namespace States;

namespace IntersectionTests {

    struct TestInput {
        std::vector<Point> p1;
        std::vector<Point> p2;

        TestInput(std::vector<Point>&& _p1, std::vector<Point>&& _p2) {
            p1 = std::move(_p1);
            p2 = std::move(_p2);
        }
    };

    struct ExpectedOutput {
        size_t size;
        IntersectionState state;
        Polygon polygon;

        ExpectedOutput(size_t&& _size, IntersectionState&& _state, std::vector<Point>&& _polygon) {
            size = _size;
            _size = 0;
            state = _state;
            _state = IntersectionState::NoIntersection;
            polygon = Polygon(_polygon);
            _polygon.clear();
        }
    };


    using test_cases_t = std::pair<TestInput, ExpectedOutput>;
    class IntersectionTestsInterface : public ::testing::TestWithParam<test_cases_t> {};

    TEST_P(IntersectionTestsInterface, IntersectionType) {
        auto expected = std::get<1>(GetParam());
        auto input = std::get<0>(GetParam());
        SCOPED_TRACE("Test");

        Polygon p1{input.p1};
        Polygon p2{input.p2};

        auto intersection = findPolygonsInter(p1, p2);

        ASSERT_EQ(intersection.polygon.size(), expected.size)
        << "Test: " << "findPolygonsInter(" << p1 << ", " << p2 << ").polygon.size()\n"
        << "Expected: " << expected.size
        << "\nOutput: " << intersection.polygon.size()
        << std::endl;

        ASSERT_EQ(intersection.state, expected.state)
        << "Test: " << "findPolygonsInter(" << p1 << ", " << p2 << ").state\n"
        << "Expected: " << (int)expected.state
        << "\nOutput: " << (int)intersection.state
        << std::endl;

        EXPECT_EQ(intersection.polygon, expected.polygon)
        << "Test: " << "findPolygonsInter(" << p1 << ", " << p2 << ").polygon\n"
        << "Expected: " << expected.polygon
        << "\nOutput: " << intersection.polygon
        << std::endl;
    }

    INSTANTIATE_TEST_SUITE_P(
            TestCases,
            IntersectionTestsInterface,
            ::testing::Values(
                    std::pair
                    (
                        TestInput({Point(0, 0, "A1"), Point(0, 2, "A2"), Point(2, 0, "A3")},
                                  {Point(0, 0, "B1"), Point(0, 3, "B2"), Point(3, 0, "B3")}),
                        ExpectedOutput(3,
                                       IntersectionState::Nested,
                                    {Point(0, 0, "C1"),
                                                              Point(0, 2, "C2"),
                                                              Point(2, 0, "C3")})
                    ),
                    std::pair
                    (
                        TestInput({Point(0, 0), Point(1, 0), Point(0, 1)},
                                  {Point(0.5, 0.5), Point(1.5, 0.5), Point(0.5, 1.5)}),
                        ExpectedOutput(1,
                                       IntersectionState::Polygon,
                                        {Point(0.5, 0.5)}
                                        )
                    ),
                    std::pair
                    (
                        TestInput({Point(100.0, 200.0), Point(100.0, 400.0), Point(300.0, 400.0)},
                                  {Point(100.0, 100.0), Point(100.0, 500.0), Point(500.0, 100.0)}),
                        ExpectedOutput(4,
                                       IntersectionState::Polygon,
                                       {Point(100, 200), Point(100, 400),
                                                Point(200, 400), Point(250, 350)}
                                      )
                    ),
                std::pair
                        (
                            TestInput({Point(-2, 2), Point(2, 2), Point(-2, -2)},
                                      {Point(4, 7), Point(3, -2), Point(2, 2)}),
                            ExpectedOutput(1,
                                           IntersectionState::Polygon,
                                           {Point(2, 2)})
                        ),
                std::pair
                        (
                            TestInput({Point(-2, 2), Point(2, 2), Point(4, -2), Point(-2, -2)},
                                      {Point(4, 7), Point(4, -2), Point(2, 2)}),
                            ExpectedOutput(2,
                                           IntersectionState::Polygon,
                                           {Point(2, 2), Point(4, -2)})
                        ),
                std::pair
                        (
                                TestInput({Point(-2, 2), Point(2, 2), Point(4, -2), Point(0, -4), Point(-2, -2)},
                                          {Point(-2, -2), Point(0, -4), Point(2, 2)}),
                                ExpectedOutput(3,
                                               IntersectionState::Nested,
                                               {Point(-2, -2), Point(2, 2), Point(0, -4)})
                        ),
                std::pair
                        (
                                TestInput({Point(-2, -2), Point(0, -4), Point(2, 2)},
                                          {Point(-2, 2), Point(2, 2), Point(4, -2), Point(0, -4), Point(-2, -2)}),
                                ExpectedOutput(3,
                                               IntersectionState::Nested,
                                               {Point(-2, -2), Point(2, 2), Point(0, -4)})
                        ),
                std::pair
                (
                        TestInput({Point(-2, 2), Point(2, 2), Point(4, -2), Point(0, -4), Point(-2, -2)},
                                  {Point(0, 0)}),
                        ExpectedOutput(1,
                                       IntersectionState::Nested,
                                       {Point(0, 0)})
                ),
                std::pair
                (
                        TestInput({Point(-2, 2), Point(2, 2), Point(4, -2), Point(0, -4), Point(-2, -2)},
                                  {Point(0, 0), Point(0, 2)}),
                        ExpectedOutput(2,
                                       IntersectionState::Nested,
                                       {Point(0, 0), Point(0, 2)})
                ),
                std::pair
                        (
                                TestInput({Point(0, 0), Point(0, 2)},
                                          {Point(-2, 2), Point(2, 2), Point(4, -2), Point(0, -4), Point(-2, -2)}),
                                ExpectedOutput(2,
                                               IntersectionState::Nested,
                                               {Point(0, 0), Point(0, 2)})
                        ),
                std::pair
                        (
                                TestInput({ Point(10.0, 0.0), Point(9.98, 0.628), Point(9.921, 1.253), Point(9.823, 1.874), Point(9.686, 2.487), Point(9.511, 3.09), Point(9.298, 3.681), Point(9.048, 4.258), Point(8.763, 4.818), Point(8.443, 5.358), Point(8.09, 5.878), Point(7.705, 6.374),
                                            Point(7.29, 6.845), Point(6.845, 7.29), Point(6.374, 7.705), Point(5.878, 8.09), Point(5.358, 8.443), Point(4.818, 8.763), Point(4.258, 9.048), Point(3.681, 9.298), Point(3.09, 9.511), Point(2.487, 9.686), Point(1.874, 9.823), Point(1.253, 9.921), Point(0.628, 9.98),
                                            Point(-0.0, 10.0), Point(-0.628, 9.98), Point(-1.253, 9.921), Point(-1.874, 9.823), Point(-2.487, 9.686), Point(-3.09, 9.511), Point(-3.681, 9.298), Point(-4.258, 9.048), Point(-4.818, 8.763), Point(-5.358, 8.443), Point(-5.878, 8.09), Point(-6.374, 7.705), Point(-6.845, 7.29),
                                            Point(-7.29, 6.845), Point(-7.705, 6.374), Point(-8.09, 5.878), Point(-8.443, 5.358), Point(-8.763, 4.818), Point(-9.048, 4.258), Point(-9.298, 3.681), Point(-9.511, 3.09), Point(-9.686, 2.487), Point(-9.823, 1.874), Point(-9.921, 1.253), Point(-9.98, 0.628), Point(-10.0, -0.0), Point(-9.98, -0.628),
                                            Point(-9.921, -1.253), Point(-9.823, -1.874), Point(-9.686, -2.487), Point(-9.511, -3.09), Point(-9.298, -3.681), Point(-9.048, -4.258), Point(-8.763, -4.818), Point(-8.443, -5.358), Point(-8.09, -5.878), Point(-7.705, -6.374), Point(-7.29, -6.845), Point(-6.845, -7.29),
                                            Point(-6.374, -7.705), Point(-5.878, -8.09), Point(-5.358, -8.443), Point(-4.818, -8.763), Point(-4.258, -9.048), Point(-3.681, -9.298), Point(-3.09, -9.511), Point(-2.487, -9.686), Point(-1.874, -9.823), Point(-1.253, -9.921), Point(-0.628, -9.98), Point(-0.0, -10.0),
                                            Point(0.628, -9.98), Point(1.253, -9.921), Point(1.874, -9.823), Point(2.487, -9.686), Point(3.09, -9.511), Point(3.681, -9.298), Point(4.258, -9.048), Point(4.818, -8.763), Point(5.358, -8.443), Point(5.878, -8.09), Point(6.374, -7.705), Point(6.845, -7.29),
                                            Point(7.29, -6.845), Point(7.705, -6.374), Point(8.09, -5.878), Point(8.443, -5.358), Point(8.763, -4.818), Point(9.048, -4.258), Point(9.298, -3.681), Point(9.511, -3.09), Point(9.686, -2.487), Point(9.823, -1.874), Point(9.921, -1.253), Point(9.98, -0.628)}
                                        ,
                                          { Point(100.0, 0.0), Point(99.998026, 0.628314), Point(99.992104, 1.256604), Point(99.982235, 1.884844), Point(99.968419, 2.51301), Point(99.950656, 3.141076), Point(99.928947, 3.769018), Point(99.903293, 4.396812), Point(99.873696, 5.024432), Point(99.840155, 5.651853), Point(99.802673, 6.279052), Point(99.761251, 6.906003),
                                            Point(99.71589, 7.532681), Point(99.666593, 8.159061), Point(99.613361, 8.78512), Point(99.556196, 9.410831), Point(99.495102, 10.036171), Point(99.430079, 10.661115), Point(99.361131, 11.285638), Point(99.28826, 11.909716), Point(99.21147, 12.533323), Point(99.130763, 13.156436), Point(99.046143, 13.779029), Point(98.957612, 14.401078),
                                            Point(98.865174, 15.022559), Point(98.768834, 15.643447), Point(98.668594, 16.263717), Point(98.56446, 16.883344), Point(98.456433, 17.502306), Point(98.34452, 18.120576), Point(98.228725, 18.738131), Point(98.109052, 19.354947), Point(97.985505, 19.970998), Point(97.85809, 20.586261), Point(97.726812, 21.200711), Point(97.591676, 21.814324),
                                            Point(97.452687, 22.427076), Point(97.309851, 23.038943), Point(97.163173, 23.6499), Point(97.01266, 24.259923), Point(96.858316, 24.868989), Point(96.700149, 25.477073), Point(96.538164, 26.084151), Point(96.372368, 26.690199), Point(96.202767, 27.295194), Point(96.029369, 27.899111), Point(95.852179, 28.501926), Point(95.671205, 29.103617),
                                            Point(95.486454, 29.704158), Point(95.297934, 30.303527), Point(95.105652, 30.901699), Point(94.909614, 31.498652), Point(94.70983, 32.094361), Point(94.506308, 32.688803), Point(94.299054, 33.281954), Point(94.088077, 33.873792), Point(93.873386, 34.464292), Point(93.654989, 35.053432), Point(93.432894, 35.641188), Point(93.207111, 36.227537),
                                            Point(92.977649, 36.812455), Point(92.744515, 37.395921), Point(92.507721, 37.97791), Point(92.267274, 38.558399), Point(92.023185, 39.137367), Point(91.775463, 39.714789), Point(91.524117, 40.290644), Point(91.269159, 40.864907), Point(91.010597, 41.437558), Point(90.748442, 42.008573), Point(90.482705, 42.577929), Point(90.213396, 43.145605),
                                            Point(89.940525, 43.711577), Point(89.664104, 44.275823), Point(89.384142, 44.838322), Point(89.100652, 45.39905), Point(88.813645, 45.957986), Point(88.523131, 46.515108), Point(88.229123, 47.070393), Point(87.931631, 47.62382), Point(87.630668, 48.175367), Point(87.326245, 48.725013), Point(87.018375, 49.272734), Point(86.70707, 49.818511),
                                            Point(86.392342, 50.36232), Point(86.074203, 50.904142), Point(85.752666, 51.443953), Point(85.427743, 51.981734), Point(85.099448, 52.517463), Point(84.767794, 53.051118), Point(84.432793, 53.582679), Point(84.094458, 54.112125), Point(83.752804, 54.639435), Point(83.407843, 55.164587), Point(83.05959, 55.687562), Point(82.708057, 56.208338),
                                            Point(82.35326, 56.726895), Point(81.995211, 57.243213), Point(81.633925, 57.75727), Point(81.269416, 58.269048), Point(80.901699, 58.778525), Point(80.530789, 59.285682), Point(80.156698, 59.790498), Point(79.779444, 60.292954), Point(79.39904, 60.79303), Point(79.015501, 61.290705), Point(78.628843, 61.785961), Point(78.239081, 62.278778),
                                            Point(77.84623, 62.769136), Point(77.450306, 63.257016), Point(77.051324, 63.742399), Point(76.649301, 64.225265), Point(76.244251, 64.705596), Point(75.836192, 65.183373), Point(75.425138, 65.658576), Point(75.011107, 66.131187), Point(74.594115, 66.601187), Point(74.174177, 67.068558), Point(73.751312, 67.533281), Point(73.325535, 67.995338),
                                            Point(72.896863, 68.454711), Point(72.465313, 68.911381), Point(72.030902, 69.365331), Point(71.593648, 69.816542), Point(71.153568, 70.264997), Point(70.710678, 70.710678), Point(70.264997, 71.153568), Point(69.816542, 71.593648), Point(69.365331, 72.030902), Point(68.911381, 72.465313), Point(68.454711, 72.896863), Point(67.995338, 73.325535),
                                            Point(67.533281, 73.751312), Point(67.068558, 74.174177), Point(66.601187, 74.594115), Point(66.131187, 75.011107), Point(65.658576, 75.425138), Point(65.183373, 75.836192), Point(64.705596, 76.244251), Point(64.225265, 76.649301), Point(63.742399, 77.051324), Point(63.257016, 77.450306), Point(62.769136, 77.84623), Point(62.278778, 78.239081),
                                            Point(61.785961, 78.628843), Point(61.290705, 79.015501), Point(60.79303, 79.39904), Point(60.292954, 79.779444), Point(59.790498, 80.156698), Point(59.285682, 80.530789), Point(58.778525, 80.901699), Point(58.269048, 81.269416), Point(57.75727, 81.633925), Point(57.243213, 81.995211), Point(56.726895, 82.35326), Point(56.208338, 82.708057),
                                            Point(55.687562, 83.05959), Point(55.164587, 83.407843), Point(54.639435, 83.752804), Point(54.112125, 84.094458), Point(53.582679, 84.432793), Point(53.051118, 84.767794), Point(52.517463, 85.099448), Point(51.981734, 85.427743), Point(51.443953, 85.752666), Point(50.904142, 86.074203), Point(50.36232, 86.392342), Point(49.818511, 86.70707),
                                            Point(49.272734, 87.018375), Point(48.725013, 87.326245), Point(48.175367, 87.630668), Point(47.62382, 87.931631), Point(47.070393, 88.229123), Point(46.515108, 88.523131), Point(45.957986, 88.813645), Point(45.39905, 89.100652), Point(44.838322, 89.384142), Point(44.275823, 89.664104), Point(43.711577, 89.940525), Point(43.145605, 90.213396),
                                            Point(42.577929, 90.482705), Point(42.008573, 90.748442), Point(41.437558, 91.010597), Point(40.864907, 91.269159), Point(40.290644, 91.524117), Point(39.714789, 91.775463), Point(39.137367, 92.023185), Point(38.558399, 92.267274), Point(37.97791, 92.507721), Point(37.395921, 92.744515), Point(36.812455, 92.977649), Point(36.227537, 93.207111),
                                            Point(35.641188, 93.432894), Point(35.053432, 93.654989), Point(34.464292, 93.873386), Point(33.873792, 94.088077), Point(33.281954, 94.299054), Point(32.688803, 94.506308), Point(32.094361, 94.70983), Point(31.498652, 94.909614), Point(30.901699, 95.105652), Point(30.303527, 95.297934), Point(29.704158, 95.486454), Point(29.103617, 95.671205),
                                            Point(28.501926, 95.852179), Point(27.899111, 96.029369), Point(27.295194, 96.202767), Point(26.690199, 96.372368), Point(26.084151, 96.538164), Point(25.477073, 96.700149), Point(24.868989, 96.858316), Point(24.259923, 97.01266), Point(23.6499, 97.163173), Point(23.038943, 97.309851), Point(22.427076, 97.452687), Point(21.814324, 97.591676),
                                            Point(21.200711, 97.726812), Point(20.586261, 97.85809), Point(19.970998, 97.985505), Point(19.354947, 98.109052), Point(18.738131, 98.228725), Point(18.120576, 98.34452), Point(17.502306, 98.456433), Point(16.883344, 98.56446), Point(16.263717, 98.668594), Point(15.643447, 98.768834), Point(15.022559, 98.865174), Point(14.401078, 98.957612),
                                            Point(13.779029, 99.046143), Point(13.156436, 99.130763), Point(12.533323, 99.21147), Point(11.909716, 99.28826), Point(11.285638, 99.361131), Point(10.661115, 99.430079), Point(10.036171, 99.495102), Point(9.410831, 99.556196), Point(8.78512, 99.613361), Point(8.159061, 99.666593), Point(7.532681, 99.71589), Point(6.906003, 99.761251),
                                            Point(6.279052, 99.802673), Point(5.651853, 99.840155), Point(5.024432, 99.873696), Point(4.396812, 99.903293), Point(3.769018, 99.928947), Point(3.141076, 99.950656), Point(2.51301, 99.968419), Point(1.884844, 99.982235), Point(1.256604, 99.992104), Point(0.628314, 99.998026), Point(0.0, 100.0), Point(-0.628314, 99.998026),
                                            Point(-1.256604, 99.992104), Point(-1.884844, 99.982235), Point(-2.51301, 99.968419), Point(-3.141076, 99.950656), Point(-3.769018, 99.928947), Point(-4.396812, 99.903293), Point(-5.024432, 99.873696), Point(-5.651853, 99.840155), Point(-6.279052, 99.802673), Point(-6.906003, 99.761251), Point(-7.532681, 99.71589), Point(-8.159061, 99.666593),
                                            Point(-8.78512, 99.613361), Point(-9.410831, 99.556196), Point(-10.036171, 99.495102), Point(-10.661115, 99.430079), Point(-11.285638, 99.361131), Point(-11.909716, 99.28826), Point(-12.533323, 99.21147), Point(-13.156436, 99.130763), Point(-13.779029, 99.046143), Point(-14.401078, 98.957612), Point(-15.022559, 98.865174), Point(-15.643447, 98.768834),
                                            Point(-16.263717, 98.668594), Point(-16.883344, 98.56446), Point(-17.502306, 98.456433), Point(-18.120576, 98.34452), Point(-18.738131, 98.228725), Point(-19.354947, 98.109052), Point(-19.970998, 97.985505), Point(-20.586261, 97.85809), Point(-21.200711, 97.726812), Point(-21.814324, 97.591676), Point(-22.427076, 97.452687), Point(-23.038943, 97.309851),
                                            Point(-23.6499, 97.163173), Point(-24.259923, 97.01266), Point(-24.868989, 96.858316), Point(-25.477073, 96.700149), Point(-26.084151, 96.538164), Point(-26.690199, 96.372368), Point(-27.295194, 96.202767), Point(-27.899111, 96.029369), Point(-28.501926, 95.852179), Point(-29.103617, 95.671205), Point(-29.704158, 95.486454), Point(-30.303527, 95.297934),
                                            Point(-30.901699, 95.105652), Point(-31.498652, 94.909614), Point(-32.094361, 94.70983), Point(-32.688803, 94.506308), Point(-33.281954, 94.299054), Point(-33.873792, 94.088077), Point(-34.464292, 93.873386), Point(-35.053432, 93.654989), Point(-35.641188, 93.432894), Point(-36.227537, 93.207111), Point(-36.812455, 92.977649), Point(-37.395921, 92.744515),
                                            Point(-37.97791, 92.507721), Point(-38.558399, 92.267274), Point(-39.137367, 92.023185), Point(-39.714789, 91.775463), Point(-40.290644, 91.524117), Point(-40.864907, 91.269159), Point(-41.437558, 91.010597), Point(-42.008573, 90.748442), Point(-42.577929, 90.482705), Point(-43.145605, 90.213396), Point(-43.711577, 89.940525), Point(-44.275823, 89.664104),
                                            Point(-44.838322, 89.384142), Point(-45.39905, 89.100652), Point(-45.957986, 88.813645), Point(-46.515108, 88.523131), Point(-47.070393, 88.229123), Point(-47.62382, 87.931631), Point(-48.175367, 87.630668), Point(-48.725013, 87.326245), Point(-49.272734, 87.018375), Point(-49.818511, 86.70707), Point(-50.36232, 86.392342), Point(-50.904142, 86.074203),
                                            Point(-51.443953, 85.752666), Point(-51.981734, 85.427743), Point(-52.517463, 85.099448), Point(-53.051118, 84.767794), Point(-53.582679, 84.432793), Point(-54.112125, 84.094458), Point(-54.639435, 83.752804), Point(-55.164587, 83.407843), Point(-55.687562, 83.05959), Point(-56.208338, 82.708057), Point(-56.726895, 82.35326), Point(-57.243213, 81.995211),
                                            Point(-57.75727, 81.633925), Point(-58.269048, 81.269416), Point(-58.778525, 80.901699), Point(-59.285682, 80.530789), Point(-59.790498, 80.156698), Point(-60.292954, 79.779444), Point(-60.79303, 79.39904), Point(-61.290705, 79.015501), Point(-61.785961, 78.628843), Point(-62.278778, 78.239081), Point(-62.769136, 77.84623), Point(-63.257016, 77.450306),
                                            Point(-63.742399, 77.051324), Point(-64.225265, 76.649301), Point(-64.705596, 76.244251), Point(-65.183373, 75.836192), Point(-65.658576, 75.425138), Point(-66.131187, 75.011107), Point(-66.601187, 74.594115), Point(-67.068558, 74.174177), Point(-67.533281, 73.751312), Point(-67.995338, 73.325535), Point(-68.454711, 72.896863), Point(-68.911381, 72.465313),
                                            Point(-69.365331, 72.030902), Point(-69.816542, 71.593648), Point(-70.264997, 71.153568), Point(-70.710678, 70.710678), Point(-71.153568, 70.264997), Point(-71.593648, 69.816542), Point(-72.030902, 69.365331), Point(-72.465313, 68.911381), Point(-72.896863, 68.454711), Point(-73.325535, 67.995338), Point(-73.751312, 67.533281), Point(-74.174177, 67.068558),
                                            Point(-74.594115, 66.601187), Point(-75.011107, 66.131187), Point(-75.425138, 65.658576), Point(-75.836192, 65.183373), Point(-76.244251, 64.705596), Point(-76.649301, 64.225265), Point(-77.051324, 63.742399), Point(-77.450306, 63.257016), Point(-77.84623, 62.769136), Point(-78.239081, 62.278778), Point(-78.628843, 61.785961), Point(-79.015501, 61.290705),
                                            Point(-79.39904, 60.79303), Point(-79.779444, 60.292954), Point(-80.156698, 59.790498), Point(-80.530789, 59.285682), Point(-80.901699, 58.778525), Point(-81.269416, 58.269048), Point(-81.633925, 57.75727), Point(-81.995211, 57.243213), Point(-82.35326, 56.726895), Point(-82.708057, 56.208338), Point(-83.05959, 55.687562), Point(-83.407843, 55.164587),
                                            Point(-83.752804, 54.639435), Point(-84.094458, 54.112125), Point(-84.432793, 53.582679), Point(-84.767794, 53.051118), Point(-85.099448, 52.517463), Point(-85.427743, 51.981734), Point(-85.752666, 51.443953), Point(-86.074203, 50.904142), Point(-86.392342, 50.36232), Point(-86.70707, 49.818511), Point(-87.018375, 49.272734), Point(-87.326245, 48.725013),
                                            Point(-87.630668, 48.175367), Point(-87.931631, 47.62382), Point(-88.229123, 47.070393), Point(-88.523131, 46.515108), Point(-88.813645, 45.957986), Point(-89.100652, 45.39905), Point(-89.384142, 44.838322), Point(-89.664104, 44.275823), Point(-89.940525, 43.711577), Point(-90.213396, 43.145605), Point(-90.482705, 42.577929), Point(-90.748442, 42.008573),
                                            Point(-91.010597, 41.437558), Point(-91.269159, 40.864907), Point(-91.524117, 40.290644), Point(-91.775463, 39.714789), Point(-92.023185, 39.137367), Point(-92.267274, 38.558399), Point(-92.507721, 37.97791), Point(-92.744515, 37.395921), Point(-92.977649, 36.812455), Point(-93.207111, 36.227537), Point(-93.432894, 35.641188), Point(-93.654989, 35.053432),
                                            Point(-93.873386, 34.464292), Point(-94.088077, 33.873792), Point(-94.299054, 33.281954), Point(-94.506308, 32.688803),Point(-94.70983, 32.094361), Point(-94.909614, 31.498652), Point(-95.105652, 30.901699), Point(-95.297934, 30.303527), Point(-95.486454, 29.704158), Point(-95.671205, 29.103617), Point(-95.852179, 28.501926), Point(-96.029369, 27.899111),
                                            Point(-96.202767, 27.295194), Point(-96.372368, 26.690199), Point(-96.538164, 26.084151), Point(-96.700149, 25.477073), Point(-96.858316, 24.868989), Point(-97.01266, 24.259923), Point(-97.163173, 23.6499), Point(-97.309851, 23.038943), Point(-97.452687, 22.427076), Point(-97.591676, 21.814324), Point(-97.726812, 21.200711), Point(-97.85809, 20.586261),
                                            Point(-97.985505, 19.970998), Point(-98.109052, 19.354947), Point(-98.228725, 18.738131), Point(-98.34452, 18.120576), Point(-98.456433, 17.502306), Point(-98.56446, 16.883344), Point(-98.668594, 16.263717), Point(-98.768834, 15.643447), Point(-98.865174, 15.022559), Point(-98.957612, 14.401078), Point(-99.046143, 13.779029), Point(-99.130763, 13.156436),
                                            Point(-99.21147, 12.533323), Point(-99.28826, 11.909716), Point(-99.361131, 11.285638), Point(-99.430079, 10.661115), Point(-99.495102, 10.036171), Point(-99.556196, 9.410831), Point(-99.613361, 8.78512), Point(-99.666593, 8.159061), Point(-99.71589, 7.532681), Point(-99.761251, 6.906003), Point(-99.802673, 6.279052), Point(-99.840155, 5.651853),
                                            Point(-99.873696, 5.024432),Point(-99.903293, 4.396812), Point(-99.928947, 3.769018), Point(-99.950656, 3.141076), Point(-99.968419, 2.51301), Point(-99.982235, 1.884844), Point(-99.992104, 1.256604), Point(-99.998026, 0.628314), Point(-100.0, 0.0), Point(-99.998026, -0.628314), Point(-99.992104, -1.256604), Point(-99.982235, -1.884844),
                                            Point(-99.968419, -2.51301), Point(-99.950656, -3.141076), Point(-99.928947, -3.769018), Point(-99.903293, -4.396812), Point(-99.873696, -5.024432), Point(-99.840155, -5.651853), Point(-99.802673, -6.279052), Point(-99.761251, -6.906003), Point(-99.71589, -7.532681), Point(-99.666593, -8.159061), Point(-99.613361, -8.78512), Point(-99.556196, -9.410831),
                                            Point(-99.495102, -10.036171), Point(-99.430079, -10.661115), Point(-99.361131, -11.285638), Point(-99.28826, -11.909716), Point(-99.21147, -12.533323), Point(-99.130763, -13.156436), Point(-99.046143, -13.779029), Point(-98.957612, -14.401078), Point(-98.865174, -15.022559), Point(-98.768834, -15.643447), Point(-98.668594, -16.263717),
                                            Point(-98.56446, -16.883344), Point(-98.456433, -17.502306), Point(-98.34452, -18.120576), Point(-98.228725, -18.738131), Point(-98.109052, -19.354947), Point(-97.985505, -19.970998), Point(-97.85809, -20.586261), Point(-97.726812, -21.200711), Point(-97.591676, -21.814324), Point(-97.452687, -22.427076), Point(-97.309851, -23.038943),
                                            Point(-97.163173, -23.6499), Point(-97.01266, -24.259923), Point(-96.858316, -24.868989), Point(-96.700149, -25.477073), Point(-96.538164, -26.084151), Point(-96.372368, -26.690199), Point(-96.202767, -27.295194), Point(-96.029369, -27.899111), Point(-95.852179, -28.501926), Point(-95.671205, -29.103617),Point(-95.486454, -29.704158), Point(-95.297934, -30.303527),
                                            Point(-95.105652, -30.901699), Point(-94.909614, -31.498652), Point(-94.70983, -32.094361), Point(-94.506308, -32.688803), Point(-94.299054, -33.281954), Point(-94.088077, -33.873792), Point(-93.873386, -34.464292), Point(-93.654989, -35.053432), Point(-93.432894, -35.641188), Point(-93.207111, -36.227537), Point(-92.977649, -36.812455), Point(-92.744515, -37.395921),
                                            Point(-92.507721, -37.97791), Point(-92.267274, -38.558399), Point(-92.023185, -39.137367), Point(-91.775463, -39.714789), Point(-91.524117, -40.290644), Point(-91.269159, -40.864907), Point(-91.010597, -41.437558), Point(-90.748442, -42.008573), Point(-90.482705, -42.577929), Point(-90.213396, -43.145605), Point(-89.940525, -43.711577), Point(-89.664104, -44.275823),
                                            Point(-89.384142, -44.838322), Point(-89.100652, -45.39905), Point(-88.813645, -45.957986), Point(-88.523131, -46.515108), Point(-88.229123, -47.070393), Point(-87.931631, -47.62382), Point(-87.630668, -48.175367), Point(-87.326245, -48.725013), Point(-87.018375, -49.272734), Point(-86.70707, -49.818511), Point(-86.392342, -50.36232), Point(-86.074203, -50.904142),
                                            Point(-85.752666, -51.443953), Point(-85.427743, -51.981734), Point(-85.099448, -52.517463), Point(-84.767794, -53.051118), Point(-84.432793, -53.582679), Point(-84.094458, -54.112125), Point(-83.752804, -54.639435), Point(-83.407843, -55.164587), Point(-83.05959, -55.687562), Point(-82.708057, -56.208338), Point(-82.35326, -56.726895), Point(-81.995211, -57.243213),
                                            Point(-81.633925, -57.75727), Point(-81.269416, -58.269048), Point(-80.901699, -58.778525), Point(-80.530789, -59.285682), Point(-80.156698, -59.790498), Point(-79.779444, -60.292954), Point(-79.39904, -60.79303), Point(-79.015501, -61.290705), Point(-78.628843, -61.785961), Point(-78.239081, -62.278778), Point(-77.84623, -62.769136), Point(-77.450306, -63.257016),
                                            Point(-77.051324, -63.742399), Point(-76.649301, -64.225265), Point(-76.244251, -64.705596), Point(-75.836192, -65.183373), Point(-75.425138, -65.658576), Point(-75.011107, -66.131187), Point(-74.594115, -66.601187), Point(-74.174177, -67.068558), Point(-73.751312, -67.533281), Point(-73.325535, -67.995338), Point(-72.896863, -68.454711), Point(-72.465313, -68.911381),
                                            Point(-72.030902, -69.365331), Point(-71.593648, -69.816542), Point(-71.153568, -70.264997), Point(-70.710678, -70.710678), Point(-70.264997, -71.153568), Point(-69.816542, -71.593648), Point(-69.365331, -72.030902),Point(-68.911381, -72.465313), Point(-68.454711, -72.896863), Point(-67.995338, -73.325535), Point(-67.533281, -73.751312), Point(-67.068558, -74.174177),
                                            Point(-66.601187, -74.594115), Point(-66.131187, -75.011107), Point(-65.658576, -75.425138), Point(-65.183373, -75.836192), Point(-64.705596, -76.244251), Point(-64.225265, -76.649301), Point(-63.742399, -77.051324), Point(-63.257016, -77.450306), Point(-62.769136, -77.84623), Point(-62.278778, -78.239081), Point(-61.785961, -78.628843), Point(-61.290705, -79.015501),
                                            Point(-60.79303, -79.39904), Point(-60.292954, -79.779444), Point(-59.790498, -80.156698), Point(-59.285682, -80.530789), Point(-58.778525, -80.901699), Point(-58.269048, -81.269416), Point(-57.75727, -81.633925), Point(-57.243213, -81.995211), Point(-56.726895, -82.35326), Point(-56.208338, -82.708057), Point(-55.687562, -83.05959), Point(-55.164587, -83.407843),
                                            Point(-54.639435, -83.752804), Point(-54.112125, -84.094458), Point(-53.582679, -84.432793), Point(-53.051118, -84.767794), Point(-52.517463, -85.099448), Point(-51.981734, -85.427743), Point(-51.443953, -85.752666), Point(-50.904142, -86.074203), Point(-50.36232, -86.392342), Point(-49.818511, -86.70707), Point(-49.272734, -87.018375), Point(-48.725013, -87.326245),
                                            Point(-48.175367, -87.630668), Point(-47.62382, -87.931631), Point(-47.070393, -88.229123), Point(-46.515108, -88.523131), Point(-45.957986, -88.813645), Point(-45.39905, -89.100652), Point(-44.838322, -89.384142), Point(-44.275823, -89.664104), Point(-43.711577, -89.940525), Point(-43.145605, -90.213396), Point(-42.577929, -90.482705), Point(-42.008573, -90.748442),
                                            Point(-41.437558, -91.010597), Point(-40.864907, -91.269159), Point(-40.290644, -91.524117), Point(-39.714789, -91.775463), Point(-39.137367, -92.023185), Point(-38.558399, -92.267274), Point(-37.97791, -92.507721), Point(-37.395921, -92.744515), Point(-36.812455, -92.977649), Point(-36.227537, -93.207111), Point(-35.641188, -93.432894), Point(-35.053432, -93.654989),
                                            Point(-34.464292, -93.873386), Point(-33.873792, -94.088077), Point(-33.281954, -94.299054), Point(-32.688803, -94.506308), Point(-32.094361, -94.70983), Point(-31.498652, -94.909614), Point(-30.901699, -95.105652), Point(-30.303527, -95.297934), Point(-29.704158, -95.486454), Point(-29.103617, -95.671205), Point(-28.501926, -95.852179), Point(-27.899111, -96.029369),
                                            Point(-27.295194, -96.202767), Point(-26.690199, -96.372368), Point(-26.084151, -96.538164), Point(-25.477073, -96.700149), Point(-24.868989, -96.858316),Point(-24.259923, -97.01266), Point(-23.6499, -97.163173), Point(-23.038943, -97.309851), Point(-22.427076, -97.452687), Point(-21.814324, -97.591676), Point(-21.200711, -97.726812), Point(-20.586261, -97.85809),
                                            Point(-19.970998, -97.985505), Point(-19.354947, -98.109052), Point(-18.738131, -98.228725), Point(-18.120576, -98.34452), Point(-17.502306, -98.456433), Point(-16.883344, -98.56446), Point(-16.263717, -98.668594), Point(-15.643447, -98.768834), Point(-15.022559, -98.865174), Point(-14.401078, -98.957612), Point(-13.779029, -99.046143), Point(-13.156436, -99.130763),
                                            Point(-12.533323, -99.21147), Point(-11.909716, -99.28826), Point(-11.285638, -99.361131), Point(-10.661115, -99.430079), Point(-10.036171, -99.495102), Point(-9.410831, -99.556196), Point(-8.78512, -99.613361), Point(-8.159061, -99.666593), Point(-7.532681, -99.71589), Point(-6.906003, -99.761251), Point(-6.279052, -99.802673), Point(-5.651853, -99.840155),
                                            Point(-5.024432, -99.873696), Point(-4.396812, -99.903293), Point(-3.769018, -99.928947), Point(-3.141076, -99.950656), Point(-2.51301, -99.968419), Point(-1.884844, -99.982235), Point(-1.256604, -99.992104), Point(-0.628314, -99.998026), Point(-0.0, -100.0), Point(0.628314, -99.998026), Point(1.256604, -99.992104), Point(1.884844, -99.982235),
                                            Point(2.51301, -99.968419), Point(3.141076, -99.950656), Point(3.769018, -99.928947), Point(4.396812, -99.903293), Point(5.024432, -99.873696), Point(5.651853, -99.840155), Point(6.279052, -99.802673), Point(6.906003, -99.761251), Point(7.532681, -99.71589), Point(8.159061, -99.666593), Point(8.78512, -99.613361), Point(9.410831, -99.556196),
                                            Point(10.036171, -99.495102), Point(10.661115, -99.430079), Point(11.285638, -99.361131), Point(11.909716, -99.28826), Point(12.533323, -99.21147), Point(13.156436, -99.130763), Point(13.779029, -99.046143), Point(14.401078, -98.957612), Point(15.022559, -98.865174), Point(15.643447, -98.768834), Point(16.263717, -98.668594), Point(16.883344, -98.56446),
                                            Point(17.502306, -98.456433), Point(18.120576, -98.34452), Point(18.738131, -98.228725), Point(19.354947, -98.109052), Point(19.970998, -97.985505), Point(20.586261, -97.85809), Point(21.200711, -97.726812), Point(21.814324, -97.591676), Point(22.427076, -97.452687), Point(23.038943, -97.309851), Point(23.6499, -97.163173), Point(24.259923, -97.01266),
                                            Point(24.868989, -96.858316), Point(25.477073, -96.700149), Point(26.084151, -96.538164), Point(26.690199, -96.372368), Point(27.295194, -96.202767),Point(27.899111, -96.029369), Point(28.501926, -95.852179), Point(29.103617, -95.671205), Point(29.704158, -95.486454), Point(30.303527, -95.297934), Point(30.901699, -95.105652), Point(31.498652, -94.909614),
                                            Point(32.094361, -94.70983), Point(32.688803, -94.506308), Point(33.281954, -94.299054), Point(33.873792, -94.088077), Point(34.464292, -93.873386), Point(35.053432, -93.654989), Point(35.641188, -93.432894), Point(36.227537, -93.207111), Point(36.812455, -92.977649), Point(37.395921, -92.744515), Point(37.97791, -92.507721), Point(38.558399, -92.267274),
                                            Point(39.137367, -92.023185), Point(39.714789, -91.775463), Point(40.290644, -91.524117), Point(40.864907, -91.269159), Point(41.437558, -91.010597), Point(42.008573, -90.748442), Point(42.577929, -90.482705), Point(43.145605, -90.213396), Point(43.711577, -89.940525), Point(44.275823, -89.664104), Point(44.838322, -89.384142), Point(45.39905, -89.100652),
                                            Point(45.957986, -88.813645), Point(46.515108, -88.523131), Point(47.070393, -88.229123), Point(47.62382, -87.931631), Point(48.175367, -87.630668), Point(48.725013, -87.326245), Point(49.272734, -87.018375), Point(49.818511, -86.70707), Point(50.36232, -86.392342), Point(50.904142, -86.074203), Point(51.443953, -85.752666), Point(51.981734, -85.427743),
                                            Point(52.517463, -85.099448), Point(53.051118, -84.767794), Point(53.582679, -84.432793), Point(54.112125, -84.094458), Point(54.639435, -83.752804), Point(55.164587, -83.407843), Point(55.687562, -83.05959), Point(56.208338, -82.708057), Point(56.726895, -82.35326), Point(57.243213, -81.995211), Point(57.75727, -81.633925), Point(58.269048, -81.269416),
                                            Point(58.778525, -80.901699), Point(59.285682, -80.530789), Point(59.790498, -80.156698), Point(60.292954, -79.779444), Point(60.79303, -79.39904), Point(61.290705, -79.015501), Point(61.785961, -78.628843), Point(62.278778, -78.239081), Point(62.769136, -77.84623), Point(63.257016, -77.450306), Point(63.742399, -77.051324), Point(64.225265, -76.649301),
                                            Point(64.705596, -76.244251), Point(65.183373, -75.836192), Point(65.658576, -75.425138), Point(66.131187, -75.011107), Point(66.601187, -74.594115), Point(67.068558, -74.174177), Point(67.533281, -73.751312), Point(67.995338, -73.325535), Point(68.454711, -72.896863), Point(68.911381, -72.465313), Point(69.365331, -72.030902), Point(69.816542, -71.593648),
                                            Point(70.264997, -71.153568), Point(70.710678, -70.710678), Point(71.153568, -70.264997), Point(71.593648, -69.816542), Point(72.030902, -69.365331), Point(72.465313, -68.911381), Point(72.896863, -68.454711), Point(73.325535, -67.995338), Point(73.751312, -67.533281), Point(74.174177, -67.068558), Point(74.594115, -66.601187), Point(75.011107, -66.131187),
                                            Point(75.425138, -65.658576), Point(75.836192, -65.183373), Point(76.244251, -64.705596), Point(76.649301, -64.225265), Point(77.051324, -63.742399), Point(77.450306, -63.257016), Point(77.84623, -62.769136), Point(78.239081, -62.278778), Point(78.628843, -61.785961), Point(79.015501, -61.290705), Point(79.39904, -60.79303), Point(79.779444, -60.292954),
                                            Point(80.156698, -59.790498), Point(80.530789, -59.285682), Point(80.901699, -58.778525), Point(81.269416, -58.269048), Point(81.633925, -57.75727), Point(81.995211, -57.243213), Point(82.35326, -56.726895), Point(82.708057, -56.208338), Point(83.05959, -55.687562), Point(83.407843, -55.164587), Point(83.752804, -54.639435), Point(84.094458, -54.112125),
                                            Point(84.432793, -53.582679), Point(84.767794, -53.051118), Point(85.099448, -52.517463), Point(85.427743, -51.981734), Point(85.752666, -51.443953), Point(86.074203, -50.904142), Point(86.392342, -50.36232), Point(86.70707, -49.818511), Point(87.018375, -49.272734), Point(87.326245, -48.725013), Point(87.630668, -48.175367), Point(87.931631, -47.62382),
                                            Point(88.229123, -47.070393), Point(88.523131, -46.515108), Point(88.813645, -45.957986), Point(89.100652, -45.39905), Point(89.384142, -44.838322), Point(89.664104, -44.275823), Point(89.940525, -43.711577), Point(90.213396, -43.145605), Point(90.482705, -42.577929), Point(90.748442, -42.008573), Point(91.010597, -41.437558), Point(91.269159, -40.864907),
                                            Point(91.524117, -40.290644), Point(91.775463, -39.714789), Point(92.023185, -39.137367), Point(92.267274, -38.558399), Point(92.507721, -37.97791), Point(92.744515, -37.395921),
                                            Point(92.977649, -36.812455), Point(93.207111, -36.227537), Point(93.432894, -35.641188), Point(93.654989, -35.053432), Point(93.873386, -34.464292), Point(94.088077, -33.873792), Point(94.299054, -33.281954), Point(94.506308, -32.688803), Point(94.70983, -32.094361), Point(94.909614, -31.498652), Point(95.105652, -30.901699), Point(95.297934, -30.303527),
                                            Point(95.486454, -29.704158), Point(95.671205, -29.103617), Point(95.852179, -28.501926), Point(96.029369, -27.899111), Point(96.202767, -27.295194), Point(96.372368, -26.690199),
                                            Point(96.538164, -26.084151), Point(96.700149, -25.477073), Point(96.858316, -24.868989), Point(97.01266, -24.259923), Point(97.163173, -23.6499), Point(97.309851, -23.038943), Point(97.452687, -22.427076), Point(97.591676, -21.814324), Point(97.726812, -21.200711), Point(97.85809, -20.586261), Point(97.985505, -19.970998), Point(98.109052, -19.354947),
                                            Point(98.228725, -18.738131), Point(98.34452, -18.120576), Point(98.456433, -17.502306), Point(98.56446, -16.883344), Point(98.668594, -16.263717), Point(98.768834, -15.643447),
                                            Point(98.865174, -15.022559), Point(98.957612, -14.401078), Point(99.046143, -13.779029), Point(99.130763, -13.156436), Point(99.21147, -12.533323), Point(99.28826, -11.909716),
                                            Point(99.361131, -11.285638), Point(99.430079, -10.661115), Point(99.495102, -10.036171), Point(99.556196, -9.410831), Point(99.613361, -8.78512), Point(99.666593, -8.159061),
                                            Point(99.71589, -7.532681), Point(99.761251, -6.906003), Point(99.802673, -6.279052), Point(99.840155, -5.651853), Point(99.873696, -5.024432), Point(99.903293, -4.396812), Point(99.928947, -3.769018),
                                            Point(99.950656, -3.141076), Point(99.968419, -2.51301), Point(99.982235, -1.884844), Point(99.992104, -1.256604), Point(99.998026, -0.628314)}
                                ),
                                ExpectedOutput(100,
                                               IntersectionState::Nested,
                                               { Point(10.0, 0.0), Point(9.98, 0.628), Point(9.921, 1.253), Point(9.823, 1.874), Point(9.686, 2.487), Point(9.511, 3.09), Point(9.298, 3.681), Point(9.048, 4.258), Point(8.763, 4.818), Point(8.443, 5.358), Point(8.09, 5.878), Point(7.705, 6.374),
                                                 Point(7.29, 6.845), Point(6.845, 7.29), Point(6.374, 7.705), Point(5.878, 8.09), Point(5.358, 8.443), Point(4.818, 8.763), Point(4.258, 9.048), Point(3.681, 9.298), Point(3.09, 9.511), Point(2.487, 9.686), Point(1.874, 9.823), Point(1.253, 9.921), Point(0.628, 9.98),
                                                 Point(-0.0, 10.0), Point(-0.628, 9.98), Point(-1.253, 9.921), Point(-1.874, 9.823), Point(-2.487, 9.686), Point(-3.09, 9.511), Point(-3.681, 9.298), Point(-4.258, 9.048), Point(-4.818, 8.763), Point(-5.358, 8.443), Point(-5.878, 8.09), Point(-6.374, 7.705), Point(-6.845, 7.29),
                                                 Point(-7.29, 6.845), Point(-7.705, 6.374), Point(-8.09, 5.878), Point(-8.443, 5.358), Point(-8.763, 4.818), Point(-9.048, 4.258), Point(-9.298, 3.681), Point(-9.511, 3.09), Point(-9.686, 2.487), Point(-9.823, 1.874), Point(-9.921, 1.253), Point(-9.98, 0.628), Point(-10.0, -0.0), Point(-9.98, -0.628),
                                                 Point(-9.921, -1.253), Point(-9.823, -1.874), Point(-9.686, -2.487), Point(-9.511, -3.09), Point(-9.298, -3.681), Point(-9.048, -4.258), Point(-8.763, -4.818), Point(-8.443, -5.358), Point(-8.09, -5.878), Point(-7.705, -6.374), Point(-7.29, -6.845), Point(-6.845, -7.29),
                                                 Point(-6.374, -7.705), Point(-5.878, -8.09), Point(-5.358, -8.443), Point(-4.818, -8.763), Point(-4.258, -9.048), Point(-3.681, -9.298), Point(-3.09, -9.511), Point(-2.487, -9.686), Point(-1.874, -9.823), Point(-1.253, -9.921), Point(-0.628, -9.98), Point(-0.0, -10.0),
                                                 Point(0.628, -9.98), Point(1.253, -9.921), Point(1.874, -9.823), Point(2.487, -9.686), Point(3.09, -9.511), Point(3.681, -9.298), Point(4.258, -9.048), Point(4.818, -8.763), Point(5.358, -8.443), Point(5.878, -8.09), Point(6.374, -7.705), Point(6.845, -7.29),
                                                 Point(7.29, -6.845), Point(7.705, -6.374), Point(8.09, -5.878), Point(8.443, -5.358), Point(8.763, -4.818), Point(9.048, -4.258), Point(9.298, -3.681), Point(9.511, -3.09), Point(9.686, -2.487), Point(9.823, -1.874), Point(9.921, -1.253), Point(9.98, -0.628)})
                        ),
                std::pair
                        (
                                TestInput({ Point(100000000.0, 0.0), Point(50000000.0, 86602540.378444),
                                            Point(-50000000.0, 86602540.378444), Point(-100000000.0, 0.0),
                                            Point(-50000000.0, -86602540.378444), Point(50000000.0, -86602540.378444)},

                                          { Point(100000000.0, 0.0), Point(50000000.0, 86602540.378444),
                                            Point(-50000000.0, 86602540.378444), Point(-100000000.0, 0.0),
                                            Point(-50000000.0, -86602540.378444), Point(50000000.0, -86602540.378444)}),

                                ExpectedOutput(6,
                                               IntersectionState::Matched,
                                               { Point(100000000.0, 0.0), Point(50000000.0, 86602540.378444),
                                                 Point(-50000000.0, 86602540.378444), Point(-100000000.0, 0.0),
                                                 Point(-50000000.0, -86602540.378444), Point(50000000.0, -86602540.378444)})
                        ),
                std::pair
                        (
                                TestInput({Point(32, 20), Point(5, 2)},
                                          {Point(10, 20), Point(30, 15)}),

                                ExpectedOutput(1,
                                               IntersectionState::Polygon,
                                               {Point(26, 16)})
                        ),
                std::pair
                        (
                                TestInput({Point(30, 15), Point(17, 2)},
                                          {Point(10, 20), Point(30, 15)}),

                                ExpectedOutput(1,
                                               IntersectionState::Polygon,
                                               {Point(30, 15)})
                        ),
                std::pair
                        (
                                TestInput({Point(30, 15), Point(17, 2)},
                                          {Point(10, 20), Point(30, 15.00002)}),

                                ExpectedOutput(0,
                                               IntersectionState::NoIntersection,
                                               {})
                        ),
                std::pair
                        (
                                TestInput({Point()},
                                          {Point()}),

                                ExpectedOutput(1,
                                               IntersectionState::Matched,
                                               {Point()})
                        ),
                std::pair
                        (
                                TestInput({Point(1, 2)},
                                          {Point(1.0000000001, 2.00000000000001)}),

                                ExpectedOutput(0,
                                               IntersectionState::NoIntersection,
                                               {})
                        ),
                std::pair
                        (
                                TestInput({Point(1, 2)},
                                          {Point(1.0000000001, 2.00000000000001)}),

                                ExpectedOutput(0,
                                               IntersectionState::NoIntersection,
                                               {})
                        ),
                std::pair
                        (
                                TestInput({Point(1, 2), Point(3, 4)},
                                          {Point(-30, -40)}),

                                ExpectedOutput(0,
                                               IntersectionState::NoIntersection,
                                               {})
                        ),
                std::pair
                        (
                                TestInput({Point(-30, -40)},
                                          {Point(1, 2), Point(3, 4)}),

                                ExpectedOutput(0,
                                               IntersectionState::NoIntersection,
                                               {})
                        ),
                std::pair
                        (
                                TestInput({Point(2, 2), Point(5, 2)},
                                          {Point(3, 2)}),

                                ExpectedOutput(1,
                                               IntersectionState::Nested,
                                               {Point(3, 2)})
                        ),
                std::pair
                        (
                                TestInput({Point(3, 2)},
                                          {Point(2, 2), Point(5, 2)}),

                                ExpectedOutput(1,
                                               IntersectionState::Nested,
                                               {Point(3, 2)})
                        ),
                std::pair
                        (
                                TestInput({Point(0, 0)},
                                          {Point(-1, -1), Point(0, 1), Point(1, 0)}),

                                ExpectedOutput(1,
                                               IntersectionState::Nested,
                                               {Point(0, 0)})
                        ),
                std::pair
                        (
                                TestInput({Point(-1, -1), Point(0, 1), Point(1, 0)},
                                          {Point(0, 0)}),

                                ExpectedOutput(1,
                                               IntersectionState::Nested,
                                               {Point(0, 0)})
                        ),
                std::pair
                        (
                                TestInput({Point(3, 3), Point(0, 0), Point(0, -3), Point(6, -3), Point(6, 0)},
                                          {Point(-2, -4), Point(9, 1.5)}),

                                ExpectedOutput(2,
                                               IntersectionState::Polygon,
                                               {Point(0, -3), Point(6, 0)})
                        ),
                std::pair
                        (
                                TestInput({Point(3, 3), Point(0, 0), Point(0, -3), Point(6, -3), Point(6, 0)},
                                          {Point(0, -3), Point(6, 0)}),

                                ExpectedOutput(2,
                                               IntersectionState::Nested,
                                               {Point(0, -3), Point(6, 0)})
                        ),
                std::pair
                        (
                                TestInput({Point(3, 3), Point(0, 0), Point(0, -3), Point(6, -3), Point(6, 0)},
                                          {Point(1, -3), Point(2, -1), Point(3, -2)}),

                                ExpectedOutput(3,
                                               IntersectionState::Nested,
                                               {Point(1, -3), Point(2, -1), Point(3, -2)})
                        ),
                std::pair
                        (
                                TestInput({Point(3, 3), Point(0, 0), Point(0, -3), Point(6, -3), Point(6, 0)},
                                          {Point(0, -3), Point(2, -1), Point(3, -2)}),

                                ExpectedOutput(3,
                                               IntersectionState::Nested,
                                               {Point(0, -3), Point(2, -1), Point(3, -2)})
                        ),
                std::pair
                        (
                                TestInput({Point(3, 3), Point(0, 0), Point(0, -3), Point(6, -3), Point(6, 0)},
                                          {Point(0, 0), Point(3, 3), Point(6, 0)}),

                                ExpectedOutput(3,
                                               IntersectionState::Nested,
                                               {Point(0, 0), Point(3, 3), Point(6, 0)})
                        ),
                std::pair
                        (
                                TestInput({Point(3, 3), Point(0, 0), Point(0, -3), Point(6, -3), Point(6, 0)},
                                          {Point(0, -3)}),

                                ExpectedOutput(1,
                                               IntersectionState::Nested,
                                               {Point(0, -3)})
                        ),
                std::pair
                        (
                                TestInput({Point(3.201392048390553, 3.0000000000000000000000000000000000001), Point(0, 0), Point(0, -3), Point(6, -3), Point(6, 0)},
                                          {Point(3.0000578925892352391, 3.000000000329835392085329058001), Point(0, 6)}),

                                ExpectedOutput(0,
                                               IntersectionState::NoIntersection,
                                               {})
                        )
            )
    );
}